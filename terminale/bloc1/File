###exercice 2
##def fileinversé (file):
##    while not file.est_vide():
##        pile.empiler(file.defiler())
##    
##    while not pile.est_vide():
##        file.enfiler(pile.depiler())
##    
##    return file
##
###exercice 3
##def deuxTuplesDeFiles (fileDentiers):
##    FImpaire = file()
##    Fpaire = file()
##    while not fileDentiers.est_vide():
##        tmp = fileDentier.defiler()
##        if tmp % 2 == 0:
##            Fpaire.enfiler(tmp)
##        else :
##            FImpaire.enfiler(tmp)
##    
##    return (Fpaire, Fimpaire)

#exercice 4
class File:
    def __init__(self): # Les éléments sont stockés dans une liste python
        self.data = []
      
    def est_vide(self):
        return len(self.data) == 0 
    
    # Le choix suivant a été fait : La tête de la file correspond au premier élément de la liste 
    #                               (et la queue au premier élément de la liste)
    
    def enfile(self,x):
        self.data.append(x)

    def defile(self):
        assert not self.est_vide(), "Vous avez essayé de défiler une file vide !"
        return self.data.pop(0) 

    def __repr__(self):       # pour afficher convenablement la file             
        """
        Affiche le contenu d'une file
        La tête de file est affichée à gauche et la queue à droite
        """
        s = "|"
        for i in range(len(self.data)) :
            s = s + str(self.data[i]) + "|"
        return s
    
    def taille(self, Tfile):
        """
        Affiche la taille de la file
        """
        tmpFile = file()
        compteur  = 0
        while not Tfile.est_vide():
            tmpFile.enfiler(Tfile.defiler)
            compteur += 1
        
        while not tmpFile.est_vide():
            Tfile.enfiler(tmpFile.defiler)
            
        return "la taille de votre file est " + compteur

    
        
